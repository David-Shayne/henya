{"version":3,"sources":["actions/userActions.js","constants/userConstants.js","components/Header.js","components/Footer.js","actions/productActions.js","constants/productConstants.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","constants/cartConstants.js","components/CheckoutSteps.js","components/CartItemsList.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","constants/orderConstants.js","screens/ProfileScreen.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/OrderAddScreen.js","components/PayFastForm.js","screens/OrderScreen.js","screens/UsersScreen.js","screens/UserEditScreen.js","screens/ProductsScreen.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","screens/OrdersScreen.js","App.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","store.js","index.js"],"names":["getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","Axios","get","data","payload","response","message","updateUser","user","put","localStorage","setItem","JSON","stringify","deleteUser","delete","updateUserById","console","log","Header","history","useDispatch","cartItems","useSelector","store","cart","Navbar","variant","bg","expand","collapseOnSelect","className","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","length","Badge","pill","NavDropdown","title","name","Item","onClick","removeItem","window","location","pathname","isAdmin","Footer","style","marginTop","Row","Col","fetchProducts","fetchProductDetails","deleteProductById","Rating","value","numReviews","color","newLine","numOfStars","key","uuid","starList","i","GenerateStars","hidden","defaultProps","protoTypes","PropTypes","number","isRequired","string","Product","product","currency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","Card","_id","Img","src","image","Body","Title","as","Text","rating","format","price","Loader","loading","Spinner","animation","role","width","height","margin","display","Message","text","children","Alert","HomeScreen","match","document","productsState","products","isLoading","error","useEffect","map","sm","md","lg","xl","ProductScreen","useState","quantity","setQuantity","productDetails","params","inStock","countInStock","Button","Carousel","interval","Image","ListGroup","description","fontWeight","Form","Control","onChange","e","target","Array","keys","disabled","push","addToCart","CheckoutSteps","onStep","link","step","index","CartItemsList","order","orderItems","removeFromCartHandler","item","alt","fluid","rounded","textAlign","Number","addToCartHandler","CartScreen","productID","search","split","reduce","total","FormContainer","xs","LoginScreen","redirect","email","setEmail","password","setPassword","onSubmit","preventDefault","String","toLowerCase","post","login","Group","controlId","Label","required","placeholder","RegisterScreen","confirmPassword","setConfirmPassword","setName","setMessage","userRegister","register","getOrder","ProfileScreen","userDetails","userUpdate","success","updateError","myOrders","resetMessages","orders","Table","striped","hover","bordered","responsive","size","border","moment","createdAt","totalPrice","isPaid","isDelivered","detailsHandler","ShippingScreen","shipping","address","setAddress","postalCode","setPostalCode","opacity","fontSize","Check","label","PaymentScreen","paymentMethod","setPaymentMethod","checked","inline","OrderAddScreen","orderCreate","itemsPrice","shippingPrice","varaint","current","createOrder","PayFastForm","item_name","notify_url","name_first","email_address","amount","Math","floor","m_payment_id","URLSearchParams","merchant_id","merchant_key","return_url","URL","cancel_url","toString","replace","OrderScreen","orderID","markDeliveredHandler","axios","href","deliveredAt","paidAt","UsersScreen","users","userDelete","deleteHandler","confirm","alert","UserEditScreen","userID","setIsAdmin","setSuccess","submitHandler","ProductsScreen","marginBottom","ProductEditScreen","setImage","setPrice","setDescription","setCountInStock","uploading","setUploading","currentImages","setCurrentImages","updateProductById","uploadFileHandler","files","formData","FormData","append","File","custom","accept","random","marginLeft","ProductCreateScreen","OrdersScreen","App","path","component","exact","Cart","Register","Login","Profile","Shipping","Payment","OrderAdd","Order","Users","UserEdit","Products","ProductEdit","ProductCreate","Orders","initialProductsState","initialProductDetailsState","reviews","initialState","getItem","parse","initialUserLoginState","initialUserRegisterState","initialUserUpdateState","initialCreateState","reducer","combineReducers","state","newItem","existItem","find","filter","orderPay","middleware","thunk","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c9612162.chunk.js","sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_SUCCESS,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_CLEAR,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_FAIL,\n  USERS_REQUEST,\n  USERS_SUCCESS,\n  USERS_FAIL,\n  USERS_RESET_LIST,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL\n} from '../constants/userConstants';\nimport Axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    //sets email in lower case\n    email = String(email).toLowerCase();\n\n    //Attempting to login using user info\n    const { data } = await Axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_CLEAR\n  });\n  dispatch({\n    type: USERS_RESET_LIST\n  });\n  localStorage.removeItem('userInfo');\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    //sets email in lower case\n    email = String(email).toLowerCase();\n\n    //Attempting to register user\n    const { data } = await Axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to get user details\n    const { data } = await Axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to update user\n    const { data } = await Axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to Delete user\n    await Axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USERS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to login using user info\n    const { data } = await Axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USERS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const updateUserById = (id, user) => async (dispatch, getState) => {\n  console.log('working');\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to update user\n    const { data } = await Axios.put(`/api/users/${id}`, user, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_CLEAR = 'USER_DETAILS_CLEAR';\n\nexport const USERS_REQUEST = 'USERS_REQUEST';\nexport const USERS_SUCCESS = 'USERS_SUCCESS';\nexport const USERS_FAIL = 'USERS_FAIL';\nexport const USERS_RESET_LIST = 'USERS_RESET_LIST';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n","import React from 'react';\nimport { Navbar, Nav, Container, Badge, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\nfunction Header({ history }) {\n  const dispatch = useDispatch();\n\n  const { cartItems } = useSelector((store) => store.cart);\n  const { userInfo } = useSelector((store) => store.userLogin);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    window.location.pathname = '/login';\n  };\n\n  return (\n    <header>\n      <Navbar\n        variant='dark'\n        bg='dark'\n        expand='lg'\n        collapseOnSelect\n        className='henya-darkest'\n      >\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Henya</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart' className='cart-link-container'>\n                <Nav.Link>\n                  {cartItems.length > 0 ? (\n                    <Badge pill variant='light' className='cart-pill'>\n                      {cartItems.length}\n                    </Badge>\n                  ) : null}\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <>\n                  <NavDropdown title={userInfo.name} id='username'>\n                    <LinkContainer to='/profile'>\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\n                    </LinkContainer>\n\n                    <NavDropdown.Item onClick={logoutHandler}>\n                      Logout\n                    </NavDropdown.Item>\n                  </NavDropdown>{' '}\n                  {userInfo && userInfo.isAdmin && (\n                    <NavDropdown title='Admin' id='adminmenu'>\n                      <LinkContainer to='/admin/users'>\n                        <NavDropdown.Item>User List</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to='/admin/products'>\n                        <NavDropdown.Item>Product List</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to='/admin/orders'>\n                        <NavDropdown.Item>Orders List</NavDropdown.Item>\n                      </LinkContainer>\n                    </NavDropdown>\n                  )}\n                </>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign in\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nfunction Footer() {\n  return (\n    <footer>\n      <Container className='p-3' style={{ marginTop: '5vh' }}>\n        <Row>\n          <Col className='text-center py-3'>\n            Copyright &copy; Henya (Pty) Ltd\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import {\n  PRODUCTS_FAIL,\n  PRODUCTS_REQUEST,\n  PRODUCTS_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL\n} from '../constants/productConstants';\nimport Axios from 'axios';\n\nexport const fetchProducts = () => async (dispatch) => {\n  try {\n    //fetch requested\n    dispatch({\n      type: PRODUCTS_REQUEST\n    });\n\n    //fetch all products\n    const { data } = await Axios.get('/api/products');\n    dispatch({ type: PRODUCTS_SUCCESS, payload: data });\n  } catch (error) {\n    //fetch failed\n    dispatch({\n      type: PRODUCTS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\nexport const fetchProductDetails = (id) => async (dispatch) => {\n  try {\n    //fetch requested\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n\n    //fetch all products\n    const { data } = await Axios.get(`/api/products/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    //fetch failed\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const updateProductById = (id, product) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to update user\n    const { data } = await Axios.put(`/api/products/${id}`, product, config);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const createProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to update user\n    const { data } = await Axios.post(`/api/products/create`, product, config);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const deleteProductById = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to update user\n    const { data } = await Axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n","export const PRODUCTS_REQUEST = 'PRODUCTS_REQUEST';\nexport const PRODUCTS_SUCCESS = 'PRODUCTS_SUCCESS';\nexport const PRODUCTS_FAIL = 'PRODUCTS_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid/dist/v4';\n\n//Function to create stars element\nconst GenerateStars = (value, color, numOfStars) => {\n  let starList = [];\n  //Loops over {numOfStars} stars and returns appropriate icon\n  for (let i = 0; i <= numOfStars - 1; i++) {\n    starList = [\n      ...starList,\n      <span key={uuid()}>\n        <i\n          style={{ color }}\n          className={\n            value >= i + 1\n              ? 'fas fa-star'\n              : value > i\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        />\n      </span>\n    ];\n  }\n  return starList;\n};\n\nconst Rating = ({ value, numReviews, color, newLine, numOfStars }) => {\n  return (\n    <div className={`rating my-3`} key={uuid()}>\n      <span className={newLine ? '' : 'mr-2'}>\n        {GenerateStars(value, color, numOfStars)}\n      </span>\n      <br hidden={!newLine} />\n      {numReviews ? <span>{numReviews} reviews</span> : ''}\n    </div>\n  );\n};\n\n//Proptypes\nRating.defaultProps = {\n  color: 'gold',\n  newLine: true,\n  numOfStars: 5\n};\n\nRating.protoTypes = {\n  value: PropTypes.number.isRequired,\n  numReviews: PropTypes.number.isRequired,\n  color: PropTypes.string,\n  newLine: PropTypes.string,\n  numOfStars: PropTypes.number\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\n\nconst Product = ({ product }) => {\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  return (\n    <Card key={product._id} className='product my-3 p-3 rounded'>\n      <div className='landing-product'>\n        <Link to={`/product/${product._id}`}>\n          <Card.Img variant='top' src={product.image[0]} />\n        </Link>\n      </div>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            numReviews={product.numReviews}\n            key={product._id}\n          />\n        </Card.Text>\n        <Card.Text as='h3'>{currency.format(product.price)}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ loading }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: '0 auto',\n        display: 'block'\n      }}\n      hidden={!loading}\n    >\n      <span className='sr-only'></span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, text, children }) => {\n  return <Alert variant={variant}>{text ? text : children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: 'info'\n};\nexport default Message;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\n//Components\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nfunction HomeScreen({ match }) {\n  document.title = 'Henya - Home';\n  const dispatch = useDispatch();\n\n  const productsState = useSelector((store) => store.products);\n  const { isLoading, error, products } = productsState;\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return (\n    <>\n      <h1 className='my-3'>Latest Products</h1>\n\n      {isLoading ? (\n        <Loader loading={isLoading} />\n      ) : error ? (\n        <Message variant='danger' text={error} />\n      ) : (\n        <Row className='product-row'>\n          {products\n            ? products.map((product) => (\n                <Col sm={12} md={6} lg={3} xl={3} key={product._id}>\n                  <Product product={product} />\n                </Col>\n              ))\n            : null}\n        </Row>\n      )}\n    </>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Row,\n  ListGroup,\n  Card,\n  Button,\n  Col,\n  Form,\n  Image,\n  Carousel\n} from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductDetails } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nfunction ProductScreen({ history, match }) {\n  document.title = 'Henya - Product Details';\n  const [quantity, setQuantity] = useState('1');\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((store) => store.productDetails);\n  const { product, isLoading, error } = productDetails;\n  useEffect(() => {\n    dispatch(fetchProductDetails(match.params.id));\n  }, [dispatch, match, history]);\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?quantity=${quantity}`);\n  };\n  const inStock = product.countInStock > 0;\n  return (\n    <div>\n      <LinkContainer to='/'>\n        <Button className='btn my-3 bg-transparent'>Go Back</Button>\n      </LinkContainer>\n      {isLoading ? (\n        <Loader loading={isLoading} />\n      ) : error ? (\n        <Message variant='danger' text={error} />\n      ) : (\n        <Row>\n          <Col md={6}>\n            {product.image && (\n              <Carousel interval={5000}>\n                {product.image.map((image) => (\n                  <Carousel.Item>\n                    <div className='productScreen-img'>\n                      <Image src={image} />\n                    </div>\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            )}\n          </Col>\n\n          <Col md={3}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  numReviews={product.numReviews}\n                  newLine={false}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Price: {currency.format(product.price)}\n              </ListGroup.Item>\n              <ListGroup.Item>{product.description}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price</Col>\n                    <Col style={{ fontWeight: 'bold' }}>\n                      {currency.format(product.price)}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status</Col>\n                    <Col>\n                      {inStock ? 'In Stock ' : 'Out Of Stock '}\n                      <i\n                        className='fas fa-dot-circle'\n                        style={{\n                          color: inStock ? 'green' : 'red'\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {inStock && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Quantity</Col>\n                      <Col>\n                        <Form.Control\n                          as='select'\n                          value={quantity}\n                          onChange={(e) => {\n                            setQuantity(e.target.value);\n                          }}\n                        >\n                          {/* Creates a list from countInStock then maps over it's values to create options */}\n                          {[...Array(product.countInStock).keys()].map(\n                            (number) => (\n                              <option key={number + 1} value={number + 1}>\n                                {number + 1}\n                              </option>\n                            )\n                          )}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <Button\n                    className='btn-block henya-dark'\n                    type='button'\n                    disabled={!inStock}\n                    onClick={addToCartHandler}\n                  >\n                    Add to cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n}\n\nexport default ProductScreen;\n","import Axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  SAVE_PAYMENT_METHOD,\n  CART_REMOVE_ALL_ITEMS\n} from '../constants/cartConstants';\nimport { SAVE_SHIPPING } from '../constants/cartConstants';\n\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await Axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      _id: data._id,\n      name: data.name,\n      price: data.price,\n      image: data.image,\n      countInStock: data.countInStock,\n      quantity\n    }\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeAllFromCart = () => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ALL_ITEMS\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify([]));\n};\n\nexport const saveShipping = (data) => (dispatch) => {\n  dispatch({ type: SAVE_SHIPPING, payload: data });\n  localStorage.setItem('shipping', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({ type: SAVE_PAYMENT_METHOD, payload: data });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_REMOVE_ALL_ITEMS = 'CART_REMOVE_ALL_ITEMS';\n\nexport const SAVE_SHIPPING = 'SAVE_SHIPPING';\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\n","import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Nav } from 'react-bootstrap';\n\nconst CheckoutSteps = ({ onStep }) => {\n  let steps = [\n    { name: 'Cart', link: '/cart' },\n    { name: 'Shipping', link: '/shipping' },\n    { name: 'Payment', link: '/payment' },\n    { name: 'Place Order', link: '/order' }\n  ];\n\n  return (\n    <Nav className='justify-content-center my-3 mb-4 checkout-steps-container'>\n      {steps.map((step, index) => (\n        <LinkContainer to={step.link} className='checkout-step'>\n          <Nav.Link disabled={index + 1 > onStep ? true : false}>\n            {step.name}\n          </Nav.Link>\n        </LinkContainer>\n      ))}\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Form, Button, ListGroup, Image } from 'react-bootstrap';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport Message from './Message';\n\nconst CartItemsList = ({ order, orderItems }) => {\n  const dispatch = useDispatch();\n\n  let { cartItems } = useSelector((store) => store.cart);\n\n  if (orderItems) {\n    cartItems = orderItems;\n  }\n\n  const addToCartHandler = (e, item) => {\n    dispatch(addToCart(item._id, Number(e.target.value)));\n  };\n  const removeFromCartHandler = (item) => {\n    dispatch(removeFromCart(item._id));\n  };\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  return (\n    <ListGroup variant='flush'>\n      {cartItems.length >= 1 ? (\n        cartItems.map((item) => (\n          <ListGroup.Item key={item._id}>\n            <Row className='align-items-center'>\n              <Col md={2}>\n                <Image src={item.image[0]} alt={item.name} fluid rounded />\n              </Col>\n\n              <Col md={4}>\n                <Link to={`/product/${item._id}`}>\n                  <h5 className='m-0'>{item.name}</h5>\n                </Link>\n              </Col>\n              {!order ? (\n                <>\n                  <Col md={2}>\n                    <p className='m-0'>{currency.format(item.price)}</p>\n                  </Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.quantity}\n                      onChange={(e) => {\n                        addToCartHandler(e, item);\n                      }}\n                    >\n                      {/* Creates a list from countInStock then maps over it's values to create options */}\n                      {[...Array(item.countInStock).keys()].map((number) => (\n                        <option key={number + 1} value={number + 1}>\n                          {number + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      className='bg-transparent'\n                      onClick={() => removeFromCartHandler(item)}\n                    >\n                      <i className='fas fa-trash' style={{ color: 'black' }} />\n                    </Button>\n                  </Col>\n                </>\n              ) : (\n                <>\n                  <Col\n                    md={orderItems ? 6 : 4}\n                    className='p-0 m-0'\n                    style={{ textAlign: 'left' }}\n                  >\n                    <p className='m-0 p-0'>\n                      {item.quantity} x {currency.format(item.price)} ={' '}\n                      {currency.format(item.quantity * item.price)}\n                    </p>\n                  </Col>\n                  {!orderItems && (\n                    <Col md={2} style={{ textAlign: 'right' }}>\n                      <Link to='/cart'>Edit</Link>\n                    </Col>\n                  )}\n                </>\n              )}\n            </Row>\n          </ListGroup.Item>\n        ))\n      ) : (\n        <Message>\n          No items in cart {'>'} <Link to='/'>Browse</Link>\n        </Message>\n      )}\n    </ListGroup>\n  );\n};\n\nCartItemsList.defaultProps = {\n  cartItems: null\n};\nexport default CartItemsList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Button, ListGroup, Card } from 'react-bootstrap';\nimport { addToCart } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport CartItemsList from '../components/CartItemsList';\n\nconst CartScreen = ({ match, location, history }) => {\n  document.title = 'Henya - Cart';\n  const productID = match.params.id;\n  const quantity = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  const { cartItems } = useSelector((store) => store.cart);\n\n  useEffect(() => {\n    if (productID) {\n      dispatch(addToCart(productID, quantity));\n    }\n  }, [dispatch, productID, quantity]);\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  return (\n    <div>\n      <CheckoutSteps onStep={1} />\n      <Row className='my-3'>\n        <Col md={8}>\n          <h1 className='mb-3'>Shopping Cart</h1>\n          <CartItemsList />\n        </Col>\n        <Col md={4} className='mt-auto'>\n          <Card>\n            <ListGroup variant='flush text-center'>\n              <ListGroup.Item>\n                <h2 className='p-3'>\n                  Subtotal (\n                  {cartItems.reduce((total, item) => {\n                    return total + item.quantity;\n                  }, 0)}\n                  ) items\n                </h2>\n                <strong>\n                  {currency.format(\n                    cartItems.reduce((total, item) => {\n                      return total + item.quantity * item.price;\n                    }, 0)\n                  )}\n                </strong>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block henya-dark'\n                  disabled={cartItems.length <= 0}\n                  onClick={checkoutHandler}\n                >\n                  Continue to Shipping\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CartScreen;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { login } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst LoginScreen = ({ location, history }) => {\n  document.title = 'Henya - Login';\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const userLogin = useSelector((store) => store.userLogin);\n  const { isLoading, error, userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1 className='my-3'>Sign In</h1>\n\n      {error && <Message variant='danger' text={error} />}\n      {isLoading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type='email'\n            placeholder='Enter email...'\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type='password'\n            placeholder='Enter password...'\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Button type='submit' variant='primary' className='mb-3 henya-dark'>\n          Sign In\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            New customer? Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { register } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst RegisterScreen = ({ location, history }) => {\n  document.title = 'Henya - Register';\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const userRegister = useSelector((store) => store.userRegister);\n  const userLogin = useSelector((store) => store.userLogin);\n  const { isLoading, error } = userRegister;\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (confirmPassword === password) {\n      dispatch(register(name, email, password));\n    } else {\n      setMessage('Passwords do not match');\n    }\n  };\n\n  const resetMessages = () => {\n    setMessage(null);\n  };\n  return (\n    <FormContainer>\n      <h1 className='my-3'>Register</h1>\n\n      {error && <Message variant='danger' text={error} />}\n      {isLoading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId='confimPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => {\n              setConfirmPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n        {message && <Message text={message} variant='danger' />}\n        <Button\n          type='submit'\n          variant='primary'\n          className='mb-3 henya-dark'\n          onClick={resetMessages}\n        >\n          Create Account\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Have an account? Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import {\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_FAIL,\n  ORDER_REQUEST,\n  ORDER_SUCCESS,\n  ORDER_FAIL,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDERS_MY_LIST_REQUEST,\n  ORDERS_MY_LIST_SUCCESS,\n  ORDERS_MY_LIST_FAIL\n} from '../constants/orderConstants';\nimport Axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to login using user info\n    const { data } = await Axios.post('/api/orders', order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to login using user info\n    const { data } = await Axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to login using user info\n    const { data } = await Axios.put(\n      `/api/orders/${id}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDERS_MY_LIST_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to login using user info\n    const { data } = await Axios.get(`/api/orders/myOrders`, config);\n\n    dispatch({\n      type: ORDERS_MY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDERS_MY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getAllOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDERS_MY_LIST_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n\n    //Attempting to login using user info\n    const { data } = await Axios.get(`/api/orders`, config);\n\n    dispatch({\n      type: ORDERS_MY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDERS_MY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_REQUEST = 'ORDER_REQUEST';\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS';\nexport const ORDER_FAIL = 'ORDER_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDERS_MY_LIST_REQUEST = 'ORDERS_MY_LIST_REQUEST';\nexport const ORDERS_MY_LIST_SUCCESS = 'ORDERS_MY_LIST_SUCCESS';\nexport const ORDERS_MY_LIST_FAIL = 'ORDERS_MY_LIST_FAIL';\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { getMyOrders } from '../actions/orderActions';\nimport moment from 'moment';\n\nconst ProfileScreen = ({ history }) => {\n  document.title = 'Henya - Profile';\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const { error, isLoading } = useSelector((store) => store.userDetails);\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const { success, error: updateError } = useSelector(\n    (store) => store.userUpdate\n  );\n  const myOrders = useSelector((store) => store.myOrders);\n\n  useEffect(() => {\n    if (userInfo) {\n      if (userInfo.name) {\n        //Merges userDetails with local state\n        setName(userInfo.name);\n        setEmail(userInfo.email);\n      } else {\n        //Grabs user profile details\n        dispatch(getUserDetails('profile'));\n      }\n    } else {\n      //Redirects to login page\n      history.push('/login?redirect=profile');\n    }\n  }, [history, userInfo, dispatch]);\n\n  useEffect(() => {\n    dispatch(getMyOrders());\n  }, [dispatch]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    resetMessages();\n    if (confirmPassword === password) {\n      dispatch(updateUser({ name, email, password }));\n      setPassword('');\n      setConfirmPassword('');\n    } else {\n      setMessage('Passwords do not match');\n    }\n  };\n\n  const resetMessages = () => {\n    setMessage(null);\n  };\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  const detailsHandler = (order) => {\n    history.push(`/orders/${order._id}`);\n  };\n  return (\n    <Row className='my-3'>\n      <Col md={3}>\n        <h1 className='mb-4'>My Profile</h1>\n\n        {error && <Message variant='danger' text={error} />}\n        {success && <Message variant='success' text='Profile updated!' />}\n        {updateError && <Message variant='danger' text={updateError} />}\n        {isLoading && <Loader loading={isLoading} />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId='confimPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => {\n                setConfirmPassword(e.target.value);\n              }}\n            />\n          </Form.Group>\n          {message && <Message text={message} variant='danger' />}\n          <Button\n            type='submit'\n            variant='primary'\n            className='mb-3 henya-dark'\n            onClick={resetMessages}\n          >\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h1 className='mb-4'>My Orders</h1>\n        {myOrders.isLoading && <Loader loading={myOrders.isLoading} />}\n        {myOrders.error && <Message variant='danger' text={myOrders.error} />}\n        {myOrders.orders && myOrders.orders.length >= 1 && (\n          <Table\n            striped\n            hover\n            bordered\n            responsive\n            size='sm'\n            style={{ border: '1px solid rgba(0,0,0,0.1)' }}\n          >\n            <th className='text-center'>ID</th>\n            <th className='text-center'>Date</th>\n            <th className='text-center'>Total</th>\n            <th className='text-center'>Paid?</th>\n            <th className='text-center'>Delivered?</th>\n            <th className='text-center'>Details</th>\n\n            <tbody>\n              {myOrders.orders.map((order) => (\n                <tr key={order._id}>\n                  <td className='text-center'>{order._id}</td>\n                  <td className='text-center'>\n                    <span>{moment(order.createdAt).format('Do MMM YYYY')}</span>\n                    <p className='my-0 mt-1'>\n                      {moment(order.createdAt).format('h:mm A')}\n                    </p>\n                  </td>\n                  <td className='text-center'>\n                    {currency.format(order.totalPrice)}\n                  </td>\n                  <td className='text-center'>\n                    {order.isPaid ? (\n                      <i className='fa fa-check text-success' />\n                    ) : (\n                      <i className='fa fa-remove text-danger' />\n                    )}\n                  </td>\n                  <td className='text-center'>\n                    {order.isDelivered ? (\n                      <i className='fa fa-check text-success' />\n                    ) : (\n                      <i className='fa fa-remove text-danger' />\n                    )}\n                  </td>\n                  <td className='text-center'>\n                    <Button\n                      className='henya-dark'\n                      onClick={() => detailsHandler(order)}\n                    >\n                      Details\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { saveShipping } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst ShippingScreen = ({ history }) => {\n  document.title = 'Henya - Shipping';\n  const dispatch = useDispatch();\n  const { shipping } = useSelector((store) => store.cart);\n\n  const [address, setAddress] = useState(shipping.address);\n  const [postalCode, setPostalCode] = useState(shipping.postalCode);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShipping({ address, postalCode }));\n    history.push('/payment');\n  };\n  return (\n    <>\n      <CheckoutSteps onStep={2} />\n      <FormContainer>\n        <h1 className='my-3'>Shipping</h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='address'>\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter address'\n              value={address}\n              onChange={(e) => {\n                setAddress(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='postalCode'>\n            <Form.Label>Postal code</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter postal code'\n              value={postalCode}\n              onChange={(e) => {\n                setPostalCode(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <p\n            className='my-3'\n            style={{ color: 'black', opacity: '0.8', fontSize: '1.2rem' }}\n          >\n            OR\n          </p>\n          <Form.Group controlId='collect'>\n            <Form.Check\n              type='checkbox'\n              value='collect'\n              label='Collect?'\n              onChange={(e) => {\n                setAddress(e.target.value);\n                setPostalCode('0000');\n              }}\n            />\n          </Form.Group>\n          <Button type='submit' variant='primary' className='mt-1 henya-dark'>\n            Continue to payment\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst PaymentScreen = ({ history }) => {\n  document.title = 'Henya - Payment';\n  const dispatch = useDispatch();\n  const { shipping } = useSelector((store) => store.cart);\n\n  if (!shipping.address) {\n    history.push('/shipping');\n  }\n  const [paymentMethod, setPaymentMethod] = useState('payfast');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/order');\n  };\n  return (\n    <>\n      <CheckoutSteps onStep={3} />\n      <FormContainer>\n        <h1 className='my-3'>Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='paymentMethod' className='mb-0 mt-3'>\n            <Form.Label\n              className='my-0'\n              as='legend'\n              style={{ fontSize: '150%' }}\n            >\n              Select Method\n            </Form.Label>\n          </Form.Group>\n          <Col>\n            <Form.Group>\n              <Form.Check\n                className='mt-2'\n                type='radio'\n                label={'PayFast or Card'}\n                id='payfast'\n                name='paymentMethod'\n                value='payfast'\n                checked\n                inline\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              />\n              <i className='fas fa-credit-card mr-1'></i>\n              <i className='fab fa-cc-mastercard mr-1'></i>\n            </Form.Group>\n          </Col>\n\n          <Button type='submit' variant='primary' className='mt-1 henya-dark'>\n            Continue to place order\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Button, Col, ListGroup, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport CartItemsList from '../components/CartItemsList';\nimport { createOrder } from '../actions/orderActions';\nimport { removeAllFromCart } from '../actions/cartActions';\n\nconst OrderAddScreen = ({ history }) => {\n  document.title = 'Henya - Add Order';\n  const dispatch = useDispatch();\n\n  const { cartItems, shipping, paymentMethod } = useSelector(\n    (store) => store.cart\n  );\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const { order, success, error } = useSelector((store) => store.orderCreate);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [userInfo, cartItems, history]);\n\n  useEffect(() => {\n    if (success && !cartItems[0]) {\n      history.push(`/orders/${order._id}`);\n    }\n  }, [history, success, order, cartItems]);\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  const itemsPrice = Number(\n    cartItems.reduce((total, item) => {\n      return total + item.quantity * item.price;\n    }, 0)\n  );\n  const shippingPrice =\n    shipping.address === 'collect' ? 0 : itemsPrice <= 1000 ? 150 : 0;\n  const totalPrice = shippingPrice + itemsPrice;\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cartItems,\n        shipping,\n        paymentMethod,\n        itemsPrice,\n        shippingPrice,\n        totalPrice\n      })\n    );\n    dispatch(removeAllFromCart());\n  };\n  return (\n    <div>\n      <CheckoutSteps onStep={4} />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item className='order-screen-list-item'>\n              <h1>Shipping</h1>\n              {shipping.address === 'collect' ? (\n                <span>\n                  <strong>Collection</strong>\n                </span>\n              ) : (\n                <>\n                  <span>\n                    <strong>Address: </strong>\n                    <i>{shipping.address}</i>\n                  </span>\n                  <p>\n                    <strong>Postal Code: </strong>\n                    <i>{shipping.postalCode}</i>\n                  </p>\n                </>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item className='order-screen-list-item mt-3'>\n              <h1>Payment</h1>\n              <p>\n                <strong>Method: </strong>\n                <i>\n                  {paymentMethod === 'paypal'\n                    ? 'PayPal or Card'\n                    : paymentMethod}\n                </i>\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item className='order-screen-list-item mt-3'>\n              <h1>Selected Items</h1>\n              <CartItemsList order />\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup varaint='flush' className='text-center'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n            </ListGroup>\n            <ListGroup.Item>\n              <Row>\n                <Col>\n                  Items(\n                  {cartItems.reduce((total, current) => {\n                    return total + current.quantity;\n                  }, 0)}\n                  ):\n                </Col>\n                <Col style={{ textAlign: 'right' }}>\n                  {currency.format(itemsPrice)}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Shipping:</Col>\n                <Col style={{ textAlign: 'right' }}>\n                  {currency.format(shippingPrice)}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>\n                  <h4 className='m-0 p-0'>Total:</h4>\n                </Col>\n                <Col\n                  style={{\n                    fontWeight: 'bold',\n                    textAlign: 'right'\n                  }}\n                >\n                  {currency.format(totalPrice)}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              {error && <Message variant='danger' text={error} />}\n              <Button\n                disabled={!cartItems[0]}\n                type='button'\n                variant='primary'\n                className='mt-1 henya-dark btn-block'\n                onClick={placeOrderHandler}\n              >\n                place Order\n              </Button>\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default OrderAddScreen;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\n\nconst PayFastForm = () => {\n  const { totalPrice, user, _id, isPaid } = useSelector(\n    (store) => store.order.order\n  );\n  const URL = 'https://www.google.com' || window.location.href;\n  const hostUrl = 'http://34ed81308d81.ngrok.io';\n\n  const merchant_id = '10020426';\n  const merchant_key = 'yvg22xx4030gz';\n  const item_name = `Henya Order ID: ${_id}`;\n  const return_url = URL;\n  const cancel_url = URL;\n  const notify_url = `${hostUrl}/api/orders/${_id}/pay`;\n  const name_first = user.name;\n  const email_address = user.email;\n  const amount = Math.floor(totalPrice);\n  const m_payment_id = `${_id}//sEcur_e`;\n\n  const params = new URLSearchParams({\n    merchant_id,\n    merchant_key,\n    amount,\n    item_name,\n    return_url,\n    cancel_url,\n    notify_url,\n    name_first,\n    email_address,\n    m_payment_id\n  });\n\n  const redirect = `https://sandbox.payfast.co.za​/eng/process?${params.toString()}`;\n\n  const submitHandler = () => {\n    window.location.replace(redirect);\n  };\n\n  return (\n    <Button\n      onClick={submitHandler}\n      className='my-3 henya-dark btn-block'\n      disabled={isPaid}\n    >\n      {isPaid ? 'Already Paid' : 'Pay Now'}\n    </Button>\n  );\n};\n\nexport default PayFastForm;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col, ListGroup, Card, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport CartItemsList from '../components/CartItemsList';\nimport { getOrder } from '../actions/orderActions';\nimport PayFastForm from '../components/PayFastForm';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst OrderScreen = ({ history, match }) => {\n  document.title = 'Henya - Order Details';\n  const orderID = match.params.id;\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const { order, isLoading, error } = useSelector((store) => store.order);\n\n  useEffect(() => {\n    if (!order || order._id !== orderID) {\n      dispatch(getOrder(orderID));\n    }\n    if (!userInfo) {\n      history.push(`/login?redirect=${window.location.pathname}`);\n    }\n  }, [dispatch, orderID, order, userInfo, history]);\n\n  const markDeliveredHandler = async () => {\n    //Setting content as json in headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: userInfo.token\n      }\n    };\n    await axios.post(`/api/orders/${order._id}/delivered`, {}, config);\n    dispatch(getOrder(order._id));\n  };\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  return isLoading ? (\n    <Loader loading={isLoading} />\n  ) : error ? (\n    <Message text={error} variant='danger' />\n  ) : (\n    <>\n      <h1 className='py-3'>\n        Order: <i>{order._id}</i>\n      </h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item className='order-screen-list-item'>\n              <h1>Shipping</h1>\n\n              <span>\n                <strong>Name: </strong>\n                <i>{order.user.name}</i>\n              </span>\n              <p>\n                <strong>Email: </strong>\n                <i>\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </i>\n              </p>\n              {order.shipping.address === 'collect' ? (\n                <p>\n                  <strong>Collection</strong>\n                </p>\n              ) : (\n                <>\n                  <span>\n                    <strong>Address: </strong>\n                    <i>{order.shipping.address}</i>\n                  </span>\n                  <p>\n                    <strong>Postal Code: </strong>\n                    <i>{order.shipping.postalCode}</i>\n                  </p>\n                </>\n              )}\n\n              <p>\n                {order.isDelivered ? (\n                  <Message\n                    variant='success'\n                    text={`Delivered on ${order.deliveredAt}`}\n                  />\n                ) : (\n                  <>\n                    <Message variant='warning' text='Not delivered' />\n                    {userInfo.isAdmin && (\n                      <Button onClick={markDeliveredHandler}>\n                        Mark as delivered\n                      </Button>\n                    )}\n                  </>\n                )}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item className='order-screen-list-item mt-3'>\n              <h1>Payment</h1>\n              <p>\n                <strong>Method: </strong>\n                <i>\n                  {order.paymentMethod === 'paypal'\n                    ? 'PayPal or Card'\n                    : order.paymentMethod}\n                </i>\n              </p>\n              {order.isPaid ? (\n                <Message\n                  variant='success'\n                  text={`Paid on ${moment(order.paidAt)}`}\n                />\n              ) : (\n                <Message variant='danger' text='Not paid' />\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item className='order-screen-list-item mt-3'>\n              <h1>Items</h1>\n              <CartItemsList order orderItems={order.orderItems} />\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup varaint='flush' className='text-center'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n            </ListGroup>\n            <ListGroup.Item>\n              <Row>\n                <Col>\n                  Items(\n                  {order.orderItems.reduce((total, current) => {\n                    return total + current.quantity;\n                  }, 0)}\n                  ):\n                </Col>\n                <Col style={{ textAlign: 'right' }}>\n                  {currency.format(order.itemsPrice)}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Shipping:</Col>\n                <Col style={{ textAlign: 'right' }}>\n                  {currency.format(order.shippingPrice)}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>\n                  <h4 className='m-0 p-0'>Total:</h4>\n                </Col>\n                <Col\n                  style={{\n                    fontWeight: 'bold',\n                    textAlign: 'right'\n                  }}\n                >\n                  {currency.format(order.totalPrice)}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          </Card>\n          <PayFastForm />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUsers, deleteUser } from '../actions/userActions';\nimport moment from 'moment';\n\nconst UsersScreen = () => {\n  document.title = 'Henya - User List';\n\n  const dispatch = useDispatch();\n\n  const { users, isLoading, error } = useSelector((store) => store.users);\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const { success } = useSelector((store) => store.userDelete);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      window.location.pathname = '/';\n    }\n  }, [userInfo]);\n\n  const deleteHandler = async (user) => {\n    let confirmed = await window.confirm(\n      `Are you sure you want to delete the user ${user.name}`\n    );\n    if (confirmed) {\n      dispatch(deleteUser(user._id));\n    } else {\n      alert('Deletion cancelled');\n    }\n  };\n  return error ? (\n    <Message variant='danger' text={error} />\n  ) : isLoading ? (\n    <Loader loading={isLoading} />\n  ) : (\n    <>\n      <h1 className='mb-3'>\n        <span>User List - </span>\n        <i className='text-danger'>{'[ADMIN]'}</i>\n      </h1>\n\n      <Table\n        striped\n        hover\n        responsive\n        size='sm'\n        style={{ border: '1px solid rgba(0,0,0,0.1)' }}\n      >\n        <th className='text-center'>ID</th>\n        <th className='text-center'>Username</th>\n        <th className='text-center'>Email</th>\n        <th className='text-center'>Register Date</th>\n        <th className='text-center'>Admin?</th>\n        <th className='text-center'>Edit</th>\n        <th className='text-center'>Delete</th>\n\n        <tbody>\n          {users.map((user) => (\n            <tr key={user._id}>\n              <td className='text-center'>{user._id}</td>\n              <td className='text-center'>{user.name}</td>\n              <td className='text-center'>\n                <a href={`mailto:${user.email}`}>{user.email}</a>\n              </td>\n              <td className='text-center'>{`${moment(user.createdAt).format(\n                'DD MMM YYYY'\n              )}`}</td>\n              <td className='text-center'>\n                {user.isAdmin ? (\n                  <i className='fa fa-check text-success' />\n                ) : (\n                  <i className='fa fa-remove text-danger' />\n                )}\n              </td>\n\n              <td className='text-center'>\n                <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                  <Button className='henya-dark'>\n                    <i className='fas fa-edit' />\n                  </Button>\n                </LinkContainer>\n              </td>\n              <td className='text-center'>\n                <Button variant='danger' onClick={() => deleteHandler(user)}>\n                  <i className='fas fa-trash' />\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default UsersScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n  getUserDetails,\n  updateUser,\n  updateUserById\n} from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst UserEditScreen = ({ location, history, match }) => {\n  document.title = 'Henya - Edit User';\n  const userID = match.params.id;\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const { user, isLoading, error } = useSelector((store) => store.userDetails);\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const [success, setSuccess] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserDetails(userID));\n  }, [userID, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password) {\n      if (confirmPassword !== password) {\n        setMessage('Passwords do not match');\n      } else {\n        resetMessages();\n        setSuccess(true);\n        dispatch(updateUserById(userID, { name, email, password, isAdmin }));\n        if (user._id === userInfo._id) {\n          dispatch(updateUser({ _id: user._id, name, email, password }));\n        }\n      }\n    } else {\n      setSuccess(true);\n      dispatch(updateUserById(userID, { name, email, isAdmin }));\n\n      if (user._id === userInfo._id) {\n        dispatch(updateUser({ _id: user._id, name, email }));\n      }\n    }\n  };\n\n  const resetMessages = () => {\n    setMessage(null);\n  };\n  return (\n    <>\n      <Link to='/admin/users' className='btn'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1 className='my-3'>Edit User {user.name}</h1>\n        {error ? (\n          <Message variant='danger' text={error} />\n        ) : isLoading ? (\n          <Loader loading={isLoading} />\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group>\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId='confimPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => {\n                  setConfirmPassword(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId='isAdminCheck'>\n              <Form.Label>Set as admin?</Form.Label>\n              <Form.Control\n                as='select'\n                value={isAdmin}\n                onChange={(e) => {\n                  setIsAdmin(e.target.value);\n                }}\n              >\n                <option value={false}>No</option>\n                <option value={true}>Yes</option>\n              </Form.Control>\n            </Form.Group>\n            {message && <Message text={message} variant='danger' />}\n            {success && <Message text='User Updated!' variant='success' />}\n            <Button\n              type='submit'\n              variant='primary'\n              className='mb-3 henya-dark'\n              onClick={submitHandler}\n            >\n              Update user\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Carousel, Image } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { deleteProductById, fetchProducts } from '../actions/productActions';\nimport moment from 'moment';\n\nconst ProductsScreen = ({ location }) => {\n  document.title = 'Henya - Products List';\n\n  const dispatch = useDispatch();\n\n  const { products, isLoading, error } = useSelector((store) => store.products);\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const { success } = useSelector((store) => store.userDelete);\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      window.location.pathname = '/';\n    }\n  }, [userInfo]);\n\n  const deleteHandler = async (product) => {\n    let confirmed = await window.confirm(\n      `Are you sure you want to delete the product ${product.name}`\n    );\n    if (confirmed) {\n      dispatch(deleteProductById(product._id));\n      window.location.push('/admin/products');\n    } else {\n      alert('Deletion cancelled');\n    }\n  };\n  return error ? (\n    <Message variant='danger' text={error} />\n  ) : isLoading ? (\n    <Loader loading={isLoading} />\n  ) : (\n    <>\n      <h1 className='mb-3'>\n        <span>Products List - </span>\n        <i className='text-danger'>{'[ADMIN]'}</i>\n      </h1>\n\n      <LinkContainer\n        to={`/admin/product/create`}\n        style={{ marginBottom: '1rem' }}\n      >\n        <Button className='henya-dark'>\n          <span>Create Product </span>\n          <i className='fas fa-plus' />\n        </Button>\n      </LinkContainer>\n\n      <Table\n        striped\n        hover\n        responsive\n        size='sm'\n        style={{ border: '1px solid rgba(0,0,0,0.1)' }}\n      >\n        <th className='text-center'>ID</th>\n        <th className='text-center'>Image(s)</th>\n        <th className='text-center'>Name</th>\n        <th className='text-center'>Create Date</th>\n        <th className='text-center'>Price</th>\n        <th className='text-center'>Quantity</th>\n        <th className='text-center'>Edit</th>\n        <th className='text-center'>Delete</th>\n\n        <tbody>\n          {products.map((product) => (\n            <tr key={product._id}>\n              <td className='text-center'>{product._id}</td>\n              <td className='text-center'>\n                <Carousel interval={5000} style={{ width: '8rem' }}>\n                  {product.image.map((image) => (\n                    <Carousel.Item>\n                      <div className='productScreen-img'>\n                        <Image src={image} />\n                      </div>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n              </td>\n              <td className='text-center'>{product.name}</td>\n\n              <td className='text-center'>{`${moment(product.createdAt).format(\n                'DD MMM YYYY'\n              )}`}</td>\n              <td className='text-center'>{currency.format(product.price)}</td>\n              <td className='text-center'>{product.countInStock}</td>\n              <td className='text-center'>\n                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                  <Button className='henya-dark'>\n                    <i className='fas fa-edit' />\n                  </Button>\n                </LinkContainer>\n              </td>\n              <td className='text-center'>\n                <Button variant='danger' onClick={() => deleteHandler(product)}>\n                  <i className='fas fa-trash' />\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default ProductsScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Carousel, Image, FormFile } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport axios from 'axios';\nimport {\n  fetchProductDetails,\n  updateProductById\n} from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\n\nconst ProductEditScreen = ({ location, history, match }) => {\n  document.title = 'Henya - Edit Product';\n  const productID = match.params.id;\n\n  const [name, setName] = useState('');\n  const [image, setImage] = useState([]);\n  const [price, setPrice] = useState('');\n  const [message, setMessage] = useState(null);\n  const [description, setDescription] = useState('');\n  const [countInStock, setCountInStock] = useState(1);\n  const [uploading, setUploading] = useState(false);\n  const [currentImages, setCurrentImages] = useState();\n\n  const { product, isLoading, error } = useSelector(\n    (store) => store.productDetails\n  );\n  const [success, setSuccess] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProductDetails(productID));\n  }, [productID, dispatch]);\n\n  useEffect(() => {\n    if (product) {\n      setName(product.name);\n      setPrice(product.price);\n      setDescription(product.description);\n      setCountInStock(product.countInStock);\n      setCurrentImages(product.image);\n    }\n  }, [product]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    setSuccess(true);\n\n    dispatch(\n      updateProductById(productID, {\n        name,\n        description,\n        countInStock,\n        price\n      })\n    );\n    resetMessages();\n  };\n\n  const uploadFileHandler = async (e) => {\n    const files = [...e.target.files];\n    let formData = new FormData();\n    formData.append('image', files[0]);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n\n      const { data } = await axios.post('/api/upload', formData, config);\n\n      setImage([...image, data]);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n  const resetMessages = () => {\n    setMessage(null);\n  };\n  return (\n    <>\n      <Link to='/admin/products' className='btn'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1 className='my-3'>Edit Product {product.name}</h1>\n        {error ? (\n          <Message variant='danger' text={error} />\n        ) : isLoading ? (\n          <Loader loading={isLoading} />\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group>\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Images</Form.Label>\n              <Form.File\n                id='image-file'\n                custom\n                label='Upload image file (.png, .jpeg, .jpg)'\n                accept='image/*'\n                onChange={uploadFileHandler}\n              />\n              <p className='text-warning' style={{ margin: '1rem 0' }}>\n                Upload Images one by one\n              </p>\n              {uploading && <Loader isLoading={uploading} />}\n              <div style={{ display: 'flex', marginTop: '1rem' }}></div>\n              <span style={{ color: 'red' }}>\n                FILES CHOSEN WILL REPLACE ALL IMAGES\n              </span>\n\n              <div style={{ display: 'flex', marginTop: '1rem' }}>\n                {product.image && (\n                  <div>\n                    <Form.Label>Current Images</Form.Label>\n                    <Carousel interval={5000} style={{ width: '10rem' }}>\n                      {product.image.map((image) => (\n                        <Carousel.Item key={Math.random() * 10000}>\n                          <div className='productScreen-img'>\n                            <Image src={image} />\n                          </div>\n                        </Carousel.Item>\n                      ))}\n                    </Carousel>\n                  </div>\n                )}\n                {currentImages && (\n                  <div style={{ marginLeft: '3.33rem' }}>\n                    <Form.Label>New Images</Form.Label>\n                    <Carousel interval={5000} style={{ width: '10rem' }}>\n                      {image.map((image) => (\n                        <Carousel.Item>\n                          <div className='productScreen-img'>\n                            <Image src={image} />\n                          </div>\n                        </Carousel.Item>\n                      ))}\n                    </Carousel>\n                  </div>\n                )}\n              </div>\n            </Form.Group>\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter Price'\n                value={price}\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter Quantity'\n                value={countInStock}\n                onChange={(e) => {\n                  setCountInStock(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as='textarea'\n                placeholder='Enter Description'\n                value={description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            {message && <Message text={message} variant='danger' />}\n            {success && <Message text='Product Updated!' variant='success' />}\n            <Button\n              type='submit'\n              variant='primary'\n              className='mb-3 henya-dark'\n              onClick={submitHandler}\n            >\n              Update Product\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Carousel, Image, FormFile } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { createProduct } from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\n\nconst ProductCreateScreen = ({ location, history, match }) => {\n  document.title = 'Henya - Edit Product';\n\n  const [name, setName] = useState('');\n  const [image, setImage] = useState([]);\n  const [price, setPrice] = useState('');\n  const [message, setMessage] = useState(null);\n  const [description, setDescription] = useState('');\n  const [countInStock, setCountInStock] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const { isLoading, error } = useSelector((store) => store.productDetails);\n  const [success, setSuccess] = useState(false);\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    setSuccess(true);\n\n    dispatch(\n      createProduct({\n        countInStock,\n        description,\n        price,\n        name,\n        image\n      })\n    );\n    resetMessages();\n  };\n\n  const uploadFileHandler = async (e) => {\n    const files = [...e.target.files];\n    let formData = new FormData();\n    formData.append('image', files[0]);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n\n      const { data } = await axios.post('/api/upload', formData, config);\n\n      setImage([...image, data]);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const resetMessages = () => {\n    setMessage(null);\n  };\n\n  return (\n    <>\n      <Link to='/admin/products' className='btn'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1 className='my-3'>Create Product</h1>\n        {error ? (\n          <Message variant='danger' text={error} />\n        ) : isLoading ? (\n          <Loader loading={isLoading} />\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group>\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Images</Form.Label>\n              <Form.File\n                id='image-file'\n                custom\n                label='Upload image file (.png, .jpeg, .jpg)'\n                accept='image/*'\n                onChange={uploadFileHandler}\n              />\n              <p className='text-warning' style={{ margin: '1rem 0' }}>\n                Upload Images one by one\n              </p>\n              {uploading && <Loader isLoading={uploading} />}\n              <div style={{ display: 'flex', marginTop: '1rem' }}>\n                {image[0] && (\n                  <div style={{ marginLeft: '3.33rem' }}>\n                    <Form.Label>New Images</Form.Label>\n                    <Carousel interval={5000} style={{ width: '10rem' }}>\n                      {image.map((image) => (\n                        <Carousel.Item key={image}>\n                          <div className='productScreen-img'>\n                            <Image src={image} />\n                          </div>\n                        </Carousel.Item>\n                      ))}\n                    </Carousel>\n                  </div>\n                )}\n              </div>\n            </Form.Group>\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                required\n                placeholder='Enter Price'\n                value={price}\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                required\n                placeholder='Enter Quantity'\n                value={countInStock}\n                onChange={(e) => {\n                  setCountInStock(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                placeholder='Enter Description'\n                value={description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            {message && <Message text={message} variant='danger' />}\n            {success && <Message text='Product Created!' variant='success' />}\n            <Button\n              type='submit'\n              variant='primary'\n              className='mb-3 henya-dark'\n              onClick={submitHandler}\n            >\n              Create Product\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductCreateScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getAllOrders } from '../actions/orderActions';\nimport moment from 'moment';\n\nconst OrdersScreen = ({ history }) => {\n  document.title = 'Henya - Orders List';\n\n  const dispatch = useDispatch();\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  const { orders, isLoading, error } = useSelector((store) => store.myOrders);\n  const { userInfo } = useSelector((store) => store.userLogin);\n  const { success } = useSelector((store) => store.userDelete);\n\n  useEffect(() => {\n    dispatch(getAllOrders());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      window.location.pathname = '/';\n    }\n  }, [userInfo]);\n\n  const detailsHandler = (order) => {\n    history.push(`/orders/${order._id}`);\n  };\n\n  return error ? (\n    <Message variant='danger' text={error} />\n  ) : isLoading ? (\n    <Loader loading={isLoading} />\n  ) : (\n    <>\n      <h1 className='mb-3'>\n        <span>Orders List - </span>\n        <i className='text-danger'>{'[ADMIN]'}</i>\n      </h1>\n\n      <Table\n        striped\n        hover\n        responsive\n        size='sm'\n        style={{ border: '1px solid rgba(0,0,0,0.1)' }}\n      >\n        <th className='text-center'>ID</th>\n        <th className='text-center'>User</th>\n        <th className='text-center'>Date</th>\n        <th className='text-center'>Total</th>\n        <th className='text-center'>Paid?</th>\n        <th className='text-center'>Delivered?</th>\n        <th className='text-center'>Details</th>\n\n        <tbody>\n          {orders.map((order) => (\n            <tr key={order._id}>\n              <td className='text-center'>{order._id}</td>\n              <td className='text-center'>{order.user.name}</td>\n              <td className='text-center'>\n                <span>{moment(order.createdAt).format('Do MMM YYYY')}</span>\n                <p className='my-0 mt-1'>\n                  {moment(order.createdAt).format('h:mm A')}\n                </p>\n              </td>\n              <td className='text-center'>\n                {currency.format(order.totalPrice)}\n              </td>\n              <td className='text-center'>\n                {order.isPaid ? (\n                  <i className='fa fa-check text-success' />\n                ) : (\n                  <i className='fa fa-remove text-danger' />\n                )}\n              </td>\n              <td className='text-center'>\n                {order.isDelivered ? (\n                  <i className='fa fa-check text-success' />\n                ) : (\n                  <i className='fa fa-remove text-danger' />\n                )}\n              </td>\n              <td className='text-center'>\n                <Button\n                  className='henya-dark'\n                  onClick={() => detailsHandler(order)}\n                >\n                  Details\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default OrdersScreen;\n","import React from 'react';\n//External components\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n//Internal components\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport Product from './screens/ProductScreen';\nimport Cart from './screens/CartScreen';\nimport Login from './screens/LoginScreen';\nimport Register from './screens/RegisterScreen';\nimport Profile from './screens/ProfileScreen';\nimport Shipping from './screens/ShippingScreen';\nimport Payment from './screens/PaymentScreen';\nimport OrderAdd from './screens/OrderAddScreen';\nimport Order from './screens/OrderScreen';\nimport Users from './screens/UsersScreen';\nimport UserEdit from './screens/UserEditScreen';\nimport Products from './screens/ProductsScreen';\nimport ProductEdit from './screens/ProductEditScreen';\nimport ProductCreate from './screens/ProductCreateScreen';\nimport Orders from './screens/OrdersScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={Product} />\n          <Route path='/cart/:id?' component={Cart} />\n          <Route path='/register' component={Register} />\n          <Route path='/login' component={Login} />\n          <Route path='/profile' component={Profile} />\n          <Route path='/shipping' component={Shipping} />\n          <Route path='/payment' component={Payment} />\n          <Route path='/order' component={OrderAdd} />\n          <Route path='/orders/:id' component={Order} />\n          <Route path='/admin/users' component={Users} />\n          <Route path='/admin/user/:id/edit' component={UserEdit} />\n          <Route path='/admin/products' component={Products} />\n          <Route path='/admin/product/:id/edit' component={ProductEdit} />\n          <Route path='/admin/product/create' component={ProductCreate} />\n          <Route path='/admin/orders' component={Orders} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  PRODUCTS_REQUEST,\n  PRODUCTS_SUCCESS,\n  PRODUCTS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET\n} from '../constants/productConstants';\n\nconst initialProductsState = { products: [], isLoading: false };\nconst initialProductDetailsState = {\n  product: { reviews: [] },\n  isLoading: false\n};\n\nexport const productsReducer = (\n  state = initialProductsState,\n  { type, payload }\n) => {\n  switch (type) {\n    case PRODUCTS_REQUEST:\n      return { ...state, isLoading: true, products: [] };\n    case PRODUCTS_SUCCESS:\n      return { ...state, isLoading: false, products: payload };\n    case PRODUCTS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = initialProductDetailsState,\n  { type, payload }\n) => {\n  switch (type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, isLoading: true };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { ...state, isLoading: false, product: payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ALL_ITEMS,\n  CART_REMOVE_ITEM,\n  SAVE_PAYMENT_METHOD,\n  SAVE_SHIPPING\n} from '../constants/cartConstants';\n\n//Sets cart to last cart from browser if available\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\n//Sets shipping data to last shipping from browser if available\nconst shippingFromStorage = localStorage.getItem('shipping')\n  ? JSON.parse(localStorage.getItem('shipping'))\n  : { address: '', postalCode: '' };\n\n//Sets payment method to last method from browser if available\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\n  : '';\n\nconst initialState = {\n  cartItems: cartItemsFromStorage,\n  item: {},\n  shipping: shippingFromStorage,\n  paymentMethod: paymentMethodFromStorage\n};\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CART_ADD_ITEM:\n      const newItem = payload;\n      //Returns true if the item is already in the cart\n      const existItem = state.cartItems.find(\n        (item) => item._id === newItem._id\n      );\n\n      if (existItem) {\n        return {\n          ...state,\n          // Updates existing item with newItem data\n          cartItems: state.cartItems.map((item) =>\n            item._id === existItem._id ? newItem : item\n          )\n        };\n      } else {\n        //Pushes the newItem to the cart list\n        return { ...state, cartItems: [...state.cartItems, newItem] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((item) => item._id !== payload)\n      };\n    case SAVE_SHIPPING:\n      return { ...state, shipping: payload };\n    case SAVE_PAYMENT_METHOD:\n      return { ...state, paymentMethod: payload };\n    case CART_REMOVE_ALL_ITEMS:\n      return { ...state, cartItems: [] };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_CLEAR,\n  USER_UPDATE_RESET,\n  USERS_REQUEST,\n  USERS_SUCCESS,\n  USERS_FAIL,\n  USERS_RESET_LIST,\n  USER_DELETE_REQUEST,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS\n} from '../constants/userConstants';\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialUserLoginState = {\n  userInfo: userInfoFromStorage,\n  isLoading: false\n};\n\nconst initialUserRegisterState = {\n  isLoading: false\n};\n\nconst initialUserUpdateState = {\n  isLoading: false,\n  success: false\n};\n\nexport const userLoginReducer = (\n  state = initialUserLoginState,\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_LOGIN_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_LOGIN_SUCCESS:\n      return { ...state, isLoading: false, userInfo: payload };\n    case USER_LOGIN_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USER_LOGOUT: {\n      return { ...state, userInfo: null };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (\n  state = initialUserRegisterState,\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_REGISTER_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_REGISTER_SUCCESS:\n      return { ...state, isLoading: false };\n    case USER_REGISTER_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (\n  state = initialUserUpdateState,\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_UPDATE_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_UPDATE_SUCCESS:\n      return { ...state, isLoading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USER_UPDATE_RESET:\n      return;\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (\n  state = { user: {}, isLoading: false },\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_DETAILS_SUCCESS:\n      return { ...state, isLoading: false, user: payload };\n    case USER_DETAILS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USER_DETAILS_CLEAR:\n      return { ...state, isLoading: false, user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const usersReducer = (\n  state = { users: {}, isLoading: true },\n  { type, payload }\n) => {\n  switch (type) {\n    case USERS_REQUEST:\n      return { ...state, isLoading: true };\n    case USERS_SUCCESS:\n      return { ...state, isLoading: false, users: payload };\n    case USERS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USERS_RESET_LIST:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (\n  state = { isLoading: true, success: false },\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_DELETE_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_DELETE_SUCCESS:\n      return { ...state, isLoading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_FAIL,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_REQUEST,\n  ORDER_SUCCESS,\n  ORDERS_MY_LIST_REQUEST,\n  ORDERS_MY_LIST_SUCCESS,\n  ORDERS_MY_LIST_FAIL\n} from '../constants/orderConstants';\n\nconst initialCreateState = {\n  error: null,\n  order: null\n};\n\nexport const orderCreateReducer = (\n  state = initialCreateState,\n  { type, payload }\n) => {\n  switch (type) {\n    case ORDER_CREATE_REQUEST:\n      return { ...state };\n    case ORDER_CREATE_SUCCESS:\n      return { ...state, order: payload, success: true };\n    case ORDER_CREATE_FAIL:\n      return { ...state, error: payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderReducer = (\n  state = { order: {}, isLoading: true, error: null },\n  { type, payload }\n) => {\n  switch (type) {\n    case ORDER_REQUEST:\n      return { ...state, isLoading: true };\n    case ORDER_SUCCESS:\n      return {\n        ...state,\n        order: payload,\n        isLoading: false\n      };\n    case ORDER_FAIL:\n      return { ...state, error: payload, isLoading: false };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case ORDER_PAY_REQUEST:\n      return { isLoading: true };\n    case ORDER_PAY_SUCCESS:\n      return {\n        success: true,\n        isLoading: false\n      };\n    case ORDER_PAY_FAIL:\n      return { error: payload, isLoading: false };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const myOrdersReducer = (\n  state = { orders: [], isLoading: false },\n  { type, payload }\n) => {\n  switch (type) {\n    case ORDERS_MY_LIST_REQUEST:\n      return { isLoading: true };\n    case ORDERS_MY_LIST_SUCCESS:\n      return {\n        orders: payload,\n        isLoading: false\n      };\n    case ORDERS_MY_LIST_FAIL:\n      return { error: payload, isLoading: false };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {\n  productDetailsReducer,\n  productsReducer\n} from './reducers/productReducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateReducer,\n  usersReducer,\n  userDeleteReducer\n} from './reducers/userReducers';\nimport {\n  orderCreateReducer,\n  orderReducer,\n  orderPayReducer,\n  myOrdersReducer\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  users: usersReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  order: orderReducer,\n  orderPay: orderPayReducer,\n  myOrders: myOrdersReducer\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/font-awesome.min.css';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}