{"version":3,"sources":["components/Header.js","components/Footer.js","components/Rating.js","components/Message.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","constants/cartConstants.js","components/CartItemsList.js","App.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","store.js","constants/productConstants.js","constants/userConstants.js","constants/orderConstants.js","index.js"],"names":["Header","Footer","Rating","value","numReviews","color","newLine","numOfStars","defaultProps","protoTypes","PropTypes","number","isRequired","string","Message","variant","text","children","Alert","HomeScreen","ProductScreen","addToCart","id","quantity","dispatch","getState","a","Axios","get","data","type","payload","_id","name","price","image","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","CartItemsList","order","orderItems","useDispatch","useSelector","store","removeFromCartHandler","item","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","ListGroup","length","map","Item","key","Row","className","Col","md","Image","src","alt","fluid","rounded","to","textAlign","format","Form","Control","as","onChange","e","Number","target","addToCartHandler","Array","keys","Button","onClick","App","width","marginTop","transform","initialProductsState","products","isLoading","initialProductDetailsState","product","reviews","initialState","getItem","parse","shipping","address","postalCode","email","paymentMethod","initialUserLoginState","userInfo","initialUserRegisterState","initialUserUpdateState","success","initialCreateState","error","reducer","combineReducers","state","productDetails","newItem","existItem","find","filter","userLogin","userRegister","userDetails","user","userUpdate","users","userDelete","orderCreate","orderPay","myOrders","orders","middleware","thunk","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9de62cdc.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Badge,\n  NavDropdown,\n  Image\n} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\nfunction Header({ history }) {\n  const dispatch = useDispatch();\n\n  const { cartItems } = useSelector((store) => store.cart);\n  const { userInfo } = useSelector((store) => store.userLogin);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    history.push('/login');\n  };\n\n  return (\n    <header>\n      <Navbar\n        variant='dark'\n        bg='dark'\n        expand='lg'\n        collapseOnSelect\n        className='henya-header'\n      >\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>\n              <Image src='/images/logo.svg' style={{ width: '7rem' }} />\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/products'>\n                <Nav.Link>Latest Products</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/about'>\n                <Nav.Link>About</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/contact' style={{ marginRight: '1rem' }}>\n                <Nav.Link>Contact</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/cart' className='cart-link-container'>\n                <Nav.Link>\n                  {cartItems.length > 0 ? (\n                    <Badge pill variant='light' className='cart-pill'>\n                      {cartItems.length}\n                    </Badge>\n                  ) : null}\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <>\n                  <NavDropdown title={userInfo.name} id='username'>\n                    {!userInfo.isGuest ? (\n                      <LinkContainer to='/profile'>\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                      </LinkContainer>\n                    ) : null}\n\n                    <NavDropdown.Item onClick={logoutHandler}>\n                      Logout\n                    </NavDropdown.Item>\n                  </NavDropdown>{' '}\n                  {userInfo && userInfo.isAdmin && (\n                    <NavDropdown title='Admin' id='adminmenu'>\n                      <LinkContainer to='/admin/users'>\n                        <NavDropdown.Item>User List</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to='/admin/products'>\n                        <NavDropdown.Item>Product List</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to='/admin/orders'>\n                        <NavDropdown.Item>Orders List</NavDropdown.Item>\n                      </LinkContainer>\n                    </NavDropdown>\n                  )}\n                </>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign in\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nfunction Footer() {\n  return (\n    <footer>\n      <Container className='p-3' style={{ marginTop: '5vh' }}>\n        <Row>\n          <Col className='text-center py-3'>\n            Copyright &copy; Henya (Pty) Ltd\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid/dist/v4';\n\n//Function to create stars element\nconst GenerateStars = (value, color, numOfStars) => {\n  let starList = [];\n  //Loops over {numOfStars} stars and returns appropriate icon\n  for (let i = 0; i <= numOfStars - 1; i++) {\n    starList = [\n      ...starList,\n      <span key={uuid()}>\n        <i\n          style={{ color }}\n          className={\n            value >= i + 1\n              ? 'fas fa-star'\n              : value > i\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        />\n      </span>\n    ];\n  }\n  return starList;\n};\n\nconst Rating = ({ value, numReviews, color, newLine, numOfStars }) => {\n  return (\n    // <div className={`rating my-3`} key={uuid()}>\n    //   <span className={newLine ? '' : 'mr-2'}>\n    //     {GenerateStars(value, color, numOfStars)}\n    //   </span>\n    //   <br hidden={!newLine} />\n    //   {numReviews ? <span>{numReviews} reviews</span> : ''}\n    // </div>\n    <></>\n  );\n};\n\n//Proptypes\nRating.defaultProps = {\n  color: 'gold',\n  newLine: true,\n  numOfStars: 5\n};\n\nRating.protoTypes = {\n  value: PropTypes.number.isRequired,\n  numReviews: PropTypes.number.isRequired,\n  color: PropTypes.string,\n  newLine: PropTypes.string,\n  numOfStars: PropTypes.number\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, text, children }) => {\n  return <Alert variant={variant}>{text ? text : children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: 'info'\n};\nexport default Message;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\n//Components\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nfunction HomeScreen({ match }) {\n  document.title = 'Henya - Home';\n  const dispatch = useDispatch();\n\n  const productsState = useSelector((store) => store.products);\n  const { isLoading, error, products } = productsState;\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return (\n    <>\n      <h1 className='my-3'>Latest Products</h1>\n\n      {isLoading ? (\n        <Loader loading={isLoading} />\n      ) : error ? (\n        <Message variant='danger' text={error} />\n      ) : (\n        <Row className='product-row'>\n          {products\n            ? products.map((product) => (\n                <Col sm={12} md={6} lg={3} xl={3} key={product._id}>\n                  <Product product={product} carouselItem={false} />\n                </Col>\n              ))\n            : null}\n        </Row>\n      )}\n    </>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Row,\n  ListGroup,\n  Card,\n  Button,\n  Col,\n  Form,\n  Image,\n  Carousel\n} from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductDetails } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nfunction ProductScreen({ history, match }) {\n  document.title = 'Henya - Product Details';\n  const [quantity, setQuantity] = useState('1');\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((store) => store.productDetails);\n  const { product, isLoading, error } = productDetails;\n  useEffect(() => {\n    dispatch(fetchProductDetails(match.params.id));\n  }, [dispatch, match, history]);\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?quantity=${quantity}`);\n  };\n  const inStock = product.countInStock > 0;\n  return (\n    <div>\n      <LinkContainer to='/'>\n        <Button className='btn my-3 bg-transparent'>Go Back</Button>\n      </LinkContainer>\n      {isLoading ? (\n        <Loader loading={isLoading} />\n      ) : error ? (\n        <Message variant='danger' text={error} />\n      ) : (\n        <Row>\n          <Col md={6}>\n            {product.image && (\n              <Carousel interval={5000}>\n                {product.image.map((image) => (\n                  <Carousel.Item>\n                    <div className='productScreen-img'>\n                      <Image src={image} />\n                    </div>\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            )}\n          </Col>\n\n          <Col md={3}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  numReviews={product.numReviews}\n                  newLine={false}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Price: {currency.format(product.price)}\n              </ListGroup.Item>\n              <ListGroup.Item>{product.description}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price</Col>\n                    <Col style={{ fontWeight: 'bold' }}>\n                      {currency.format(product.price)}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status</Col>\n                    <Col>\n                      {inStock ? 'In Stock ' : 'Out Of Stock '}\n                      <i\n                        className='fas fa-dot-circle'\n                        style={{\n                          color: inStock ? 'green' : 'red'\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {inStock && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Quantity</Col>\n                      <Col>\n                        <Form.Control\n                          as='select'\n                          value={quantity}\n                          onChange={(e) => {\n                            setQuantity(e.target.value);\n                          }}\n                        >\n                          {/* Creates a list from countInStock then maps over it's values to create options */}\n                          {[...Array(product.countInStock).keys()].map(\n                            (number) => (\n                              <option key={number + 1} value={number + 1}>\n                                {number + 1}\n                              </option>\n                            )\n                          )}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <Button\n                    className='btn-block henya-dark'\n                    type='button'\n                    disabled={!inStock}\n                    onClick={addToCartHandler}\n                  >\n                    Add to cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n}\n\nexport default ProductScreen;\n","import Axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  SAVE_PAYMENT_METHOD,\n  CART_REMOVE_ALL_ITEMS\n} from '../constants/cartConstants';\nimport { SAVE_SHIPPING } from '../constants/cartConstants';\n\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await Axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      _id: data._id,\n      name: data.name,\n      price: data.price,\n      image: data.image,\n      countInStock: data.countInStock,\n      quantity\n    }\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeAllFromCart = () => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ALL_ITEMS\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify([]));\n};\n\nexport const saveShipping = (data) => (dispatch) => {\n  dispatch({ type: SAVE_SHIPPING, payload: data });\n  localStorage.setItem('shipping', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({ type: SAVE_PAYMENT_METHOD, payload: data });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_REMOVE_ALL_ITEMS = 'CART_REMOVE_ALL_ITEMS';\n\nexport const SAVE_SHIPPING = 'SAVE_SHIPPING';\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Form, Button, ListGroup, Image } from 'react-bootstrap';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport Message from './Message';\n\nconst CartItemsList = ({ order, orderItems }) => {\n  const dispatch = useDispatch();\n\n  let { cartItems } = useSelector((store) => store.cart);\n\n  if (orderItems) {\n    cartItems = orderItems;\n  }\n\n  const addToCartHandler = (e, item) => {\n    dispatch(addToCart(item._id, Number(e.target.value)));\n  };\n  const removeFromCartHandler = (item) => {\n    dispatch(removeFromCart(item._id));\n  };\n\n  const currency = new Intl.NumberFormat('en-ZA', {\n    style: 'currency',\n    currency: 'ZAR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n\n  return (\n    <ListGroup variant='flush'>\n      {cartItems.length >= 1 ? (\n        cartItems.map((item) => (\n          <ListGroup.Item key={item._id}>\n            <Row className='align-items-center'>\n              <Col md={2}>\n                <Image src={item.image[0]} alt={item.name} fluid rounded />\n              </Col>\n\n              <Col md={4}>\n                <Link to={`/product/${item._id}`}>\n                  <h5 className='m-0'>{item.name}</h5>\n                </Link>\n              </Col>\n              {!order ? (\n                <>\n                  <Col md={2}>\n                    <p className='m-0'>{currency.format(item.price)}</p>\n                  </Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.quantity}\n                      onChange={(e) => {\n                        addToCartHandler(e, item);\n                      }}\n                    >\n                      {/* Creates a list from countInStock then maps over it's values to create options */}\n                      {[...Array(item.countInStock).keys()].map((number) => (\n                        <option key={number + 1} value={number + 1}>\n                          {number + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      className='bg-transparent'\n                      onClick={() => removeFromCartHandler(item)}\n                    >\n                      <i className='fas fa-trash' style={{ color: 'black' }} />\n                    </Button>\n                  </Col>\n                </>\n              ) : (\n                <>\n                  <Col\n                    md={orderItems ? 6 : 4}\n                    className='p-0 m-0'\n                    style={{ textAlign: 'left' }}\n                  >\n                    <p className='m-0 p-0'>\n                      {item.quantity} x {currency.format(item.price)} ={' '}\n                      {currency.format(item.quantity * item.price)}\n                    </p>\n                  </Col>\n                  {!orderItems && (\n                    <Col md={2} style={{ textAlign: 'right' }}>\n                      <Link to='/cart'>Edit</Link>\n                    </Col>\n                  )}\n                </>\n              )}\n            </Row>\n          </ListGroup.Item>\n        ))\n      ) : (\n        <Message>\n          No items in cart {'>'} <Link to='/'>Browse</Link>\n        </Message>\n      )}\n    </ListGroup>\n  );\n};\n\nCartItemsList.defaultProps = {\n  cartItems: null\n};\nexport default CartItemsList;\n","import React from 'react';\n//External components\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n//Internal components\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport Product from './screens/ProductScreen';\nimport Cart from './screens/CartScreen';\nimport Login from './screens/LoginScreen';\nimport Register from './screens/RegisterScreen';\nimport Profile from './screens/ProfileScreen';\nimport Shipping from './screens/ShippingScreen';\nimport Payment from './screens/PaymentScreen';\nimport OrderAdd from './screens/OrderAddScreen';\nimport Order from './screens/OrderScreen';\nimport Users from './screens/UsersScreen';\nimport UserEdit from './screens/UserEditScreen';\nimport Products from './screens/ProductsScreen';\nimport ProductEdit from './screens/ProductEditScreen';\nimport ProductCreate from './screens/ProductCreateScreen';\nimport Orders from './screens/OrdersScreen';\nimport About from './screens/About';\nimport Contact from './screens/Contact';\nimport ProductCarousel from './screens/ProductCarouselScreen';\n\nfunction App() {\n  return (\n    <h1\n      style={{\n        width: '100vw',\n        textAlign: 'center',\n        marginTop: '50vh',\n        transform: 'translateY(-50%)'\n      }}\n    >\n      Site Temporarily unavailable\n    </h1>\n    // <Router>\n    //   <Header />\n    //   <main className='py-3'>\n    //     <Container>\n    //       <Route path='/' component={ProductCarousel} exact />\n    //       <Route path='/products' component={HomeScreen} exact />\n    //       <Route path='/about' component={About} />\n    //       <Route path='/contact' component={Contact} />\n    //       <Route path='/product/:id' component={Product} />\n    //       <Route path='/cart/:id?' component={Cart} />\n    //       <Route path='/register' component={Register} />\n    //       <Route path='/login' component={Login} />\n    //       <Route path='/profile' component={Profile} />\n    //       <Route path='/shipping' component={Shipping} />\n    //       <Route path='/payment' component={Payment} />\n    //       <Route path='/order' component={OrderAdd} />\n    //       <Route path='/orders/:id' component={Order} />\n    //       <Route path='/admin/users' component={Users} />\n    //       <Route path='/admin/user/:id/edit' component={UserEdit} />\n    //       <Route path='/admin/products' component={Products} />\n    //       <Route path='/admin/product/:id/edit' component={ProductEdit} />\n    //       <Route path='/admin/product/create' component={ProductCreate} />\n    //       <Route path='/admin/orders' component={Orders} />\n    //     </Container>\n    //   </main>\n    //   <Footer />\n    // </Router>\n  );\n}\n\nexport default App;\n","import {\n  PRODUCTS_REQUEST,\n  PRODUCTS_SUCCESS,\n  PRODUCTS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET\n} from '../constants/productConstants';\n\nconst initialProductsState = { products: [], isLoading: false };\nconst initialProductDetailsState = {\n  product: { reviews: [] },\n  isLoading: false\n};\n\nexport const productsReducer = (\n  state = initialProductsState,\n  { type, payload }\n) => {\n  switch (type) {\n    case PRODUCTS_REQUEST:\n      return { ...state, isLoading: true, products: [] };\n    case PRODUCTS_SUCCESS:\n      return { ...state, isLoading: false, products: payload };\n    case PRODUCTS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = initialProductDetailsState,\n  { type, payload }\n) => {\n  switch (type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, isLoading: true };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { ...state, isLoading: false, product: payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ALL_ITEMS,\n  CART_REMOVE_ITEM,\n  SAVE_PAYMENT_METHOD,\n  SAVE_SHIPPING\n} from '../constants/cartConstants';\n\n//Sets cart to last cart from browser if available\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\n//Sets shipping data to last shipping from browser if available\nconst shippingFromStorage = localStorage.getItem('shipping')\n  ? JSON.parse(localStorage.getItem('shipping'))\n  : { address: '', postalCode: '', email: '' };\n\n//Sets payment method to last method from browser if available\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\n  : '';\n\nconst initialState = {\n  cartItems: cartItemsFromStorage,\n  item: {},\n  shipping: shippingFromStorage,\n  paymentMethod: paymentMethodFromStorage\n};\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CART_ADD_ITEM:\n      const newItem = payload;\n      //Returns true if the item is already in the cart\n      const existItem = state.cartItems.find(\n        (item) => item._id === newItem._id\n      );\n\n      if (existItem) {\n        return {\n          ...state,\n          // Updates existing item with newItem data\n          cartItems: state.cartItems.map((item) =>\n            item._id === existItem._id ? newItem : item\n          )\n        };\n      } else {\n        //Pushes the newItem to the cart list\n        return { ...state, cartItems: [...state.cartItems, newItem] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((item) => item._id !== payload)\n      };\n    case SAVE_SHIPPING:\n      return { ...state, shipping: payload };\n    case SAVE_PAYMENT_METHOD:\n      return { ...state, paymentMethod: payload };\n    case CART_REMOVE_ALL_ITEMS:\n      return { ...state, cartItems: [] };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_CLEAR,\n  USER_UPDATE_RESET,\n  USERS_REQUEST,\n  USERS_SUCCESS,\n  USERS_FAIL,\n  USERS_RESET_LIST,\n  USER_DELETE_REQUEST,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS\n} from '../constants/userConstants';\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialUserLoginState = {\n  userInfo: userInfoFromStorage,\n  isLoading: false\n};\n\nconst initialUserRegisterState = {\n  isLoading: false\n};\n\nconst initialUserUpdateState = {\n  isLoading: false,\n  success: false\n};\n\nexport const userLoginReducer = (\n  state = initialUserLoginState,\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_LOGIN_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_LOGIN_SUCCESS:\n      return { ...state, isLoading: false, userInfo: payload };\n    case USER_LOGIN_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USER_LOGOUT: {\n      return { ...state, userInfo: null };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (\n  state = initialUserRegisterState,\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_REGISTER_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_REGISTER_SUCCESS:\n      return { ...state, isLoading: false };\n    case USER_REGISTER_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (\n  state = initialUserUpdateState,\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_UPDATE_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_UPDATE_SUCCESS:\n      return { ...state, isLoading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USER_UPDATE_RESET:\n      return;\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (\n  state = { user: {}, isLoading: false },\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_DETAILS_SUCCESS:\n      return { ...state, isLoading: false, user: payload };\n    case USER_DETAILS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USER_DETAILS_CLEAR:\n      return { ...state, isLoading: false, user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const usersReducer = (\n  state = { users: {}, isLoading: true },\n  { type, payload }\n) => {\n  switch (type) {\n    case USERS_REQUEST:\n      return { ...state, isLoading: true };\n    case USERS_SUCCESS:\n      return { ...state, isLoading: false, users: payload };\n    case USERS_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    case USERS_RESET_LIST:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (\n  state = { isLoading: true, success: false },\n  { type, payload }\n) => {\n  switch (type) {\n    case USER_DELETE_REQUEST:\n      return { ...state, isLoading: true };\n    case USER_DELETE_SUCCESS:\n      return { ...state, isLoading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { ...state, isLoading: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_FAIL,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_REQUEST,\n  ORDER_SUCCESS,\n  ORDERS_MY_LIST_REQUEST,\n  ORDERS_MY_LIST_SUCCESS,\n  ORDERS_MY_LIST_FAIL\n} from '../constants/orderConstants';\n\nconst initialCreateState = {\n  error: null,\n  order: null\n};\n\nexport const orderCreateReducer = (\n  state = initialCreateState,\n  { type, payload }\n) => {\n  switch (type) {\n    case ORDER_CREATE_REQUEST:\n      return { ...state };\n    case ORDER_CREATE_SUCCESS:\n      return { ...state, order: payload, success: true };\n    case ORDER_CREATE_FAIL:\n      return { ...state, error: payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderReducer = (\n  state = { order: {}, isLoading: true, error: null },\n  { type, payload }\n) => {\n  switch (type) {\n    case ORDER_REQUEST:\n      return { ...state, isLoading: true };\n    case ORDER_SUCCESS:\n      return {\n        ...state,\n        order: payload,\n        isLoading: false\n      };\n    case ORDER_FAIL:\n      return { ...state, error: payload, isLoading: false };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case ORDER_PAY_REQUEST:\n      return { isLoading: true };\n    case ORDER_PAY_SUCCESS:\n      return {\n        success: true,\n        isLoading: false\n      };\n    case ORDER_PAY_FAIL:\n      return { error: payload, isLoading: false };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const myOrdersReducer = (\n  state = { orders: [], isLoading: false },\n  { type, payload }\n) => {\n  switch (type) {\n    case ORDERS_MY_LIST_REQUEST:\n      return { isLoading: true };\n    case ORDERS_MY_LIST_SUCCESS:\n      return {\n        orders: payload,\n        isLoading: false\n      };\n    case ORDERS_MY_LIST_FAIL:\n      return { error: payload, isLoading: false };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {\n  productDetailsReducer,\n  productsReducer\n} from './reducers/productReducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateReducer,\n  usersReducer,\n  userDeleteReducer\n} from './reducers/userReducers';\nimport {\n  orderCreateReducer,\n  orderReducer,\n  orderPayReducer,\n  myOrdersReducer\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  users: usersReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  order: orderReducer,\n  orderPay: orderPayReducer,\n  myOrders: myOrdersReducer\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","export const PRODUCTS_REQUEST = 'PRODUCTS_REQUEST';\nexport const PRODUCTS_SUCCESS = 'PRODUCTS_SUCCESS';\nexport const PRODUCTS_FAIL = 'PRODUCTS_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_CLEAR = 'USER_DETAILS_CLEAR';\n\nexport const USERS_REQUEST = 'USERS_REQUEST';\nexport const USERS_SUCCESS = 'USERS_SUCCESS';\nexport const USERS_FAIL = 'USERS_FAIL';\nexport const USERS_RESET_LIST = 'USERS_RESET_LIST';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_REQUEST = 'ORDER_REQUEST';\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS';\nexport const ORDER_FAIL = 'ORDER_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDERS_MY_LIST_REQUEST = 'ORDERS_MY_LIST_REQUEST';\nexport const ORDERS_MY_LIST_SUCCESS = 'ORDERS_MY_LIST_SUCCESS';\nexport const ORDERS_MY_LIST_FAIL = 'ORDERS_MY_LIST_FAIL';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/font-awesome.min.css';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}